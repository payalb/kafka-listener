# Kafka broker address
spring.kafka.bootstrap-servers=kafka-service:9092

# Consumer settings
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.properties.max.poll.interval.ms=900000
#polling gap of 15 mins, means consumer unresponsive

# Producer settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


#custom properties
kafka.poll.duration=1000
kafka.deadletter.delay=120000
# 2 minutes in milliseconds

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.consumer.paused: false
# Dynamically change this to 'true' to pause the consumer
kafka.consumer.pauseduration: 1000 

#https://medium.com/bliblidotcom-techblog/change-spring-boot-kafka-consumer-state-at-runtime-5546341dfa5c
